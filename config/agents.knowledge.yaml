# Knowledge Sources Configuration
# This file defines knowledge sources that can be used by agents or crews
# Each knowledge source has a type and specific configuration parameters

knowledge_sources:
  # Basic String Knowledge Source
  user_profile:
    type: string
    content: |
      User Profile: John Doe
      Age: 30
      Location: San Francisco, CA
      Occupation: Software Engineer
      Interests: AI, Machine Learning, Python programming
      Preferred communication style: Technical and detailed
  
  # Text File Knowledge Source
  company_policies:
    type: text_file
    file_paths:
    - "company_policies.txt"
    encoding: "utf-8"
  
  # PDF Knowledge Source
  technical_documentation:
    type: pdf
    file_paths:
    - "api_documentation.pdf"
    chunk_size: 1000
    chunk_overlap: 200
  
  # CSV Knowledge Source
  product_catalog:
    type: csv
    file_paths:
    - "products.csv"
    source_column: "description"
    metadata_columns: ["product_id", "category", "price"]
  
  # Excel Knowledge Source
  sales_data:
    type: excel
    file_paths:
    - "sales_report.xlsx"
    sheet_name: "Q4_2024"
    source_column: "notes"
    metadata_columns: ["region", "amount", "date"]
  
  # JSON Knowledge Source
  api_endpoints:
    type: json
    file_paths:
    - "api_endpoints.json"
    content_key: "documentation"
    metadata_keys: ["endpoint", "method", "version"]
  
  # Web Content Knowledge Source
  web_documentation:
    type: web_content
    urls:
      - "https://docs.crewai.com/concepts/knowledge"
      - "https://docs.crewai.com/concepts/agents"
    selector: "main"
    max_depth: 2
  
  # Supported Knowledge Sources Reference
  supported_types:
    type: string
    content: |
      Supported Knowledge Source Types:
      - string: Direct string content
      - text_file: Plain text files (.txt)
      - pdf: PDF documents
      - csv: CSV files with structured data
      - excel: Excel spreadsheets (.xlsx, .xls)
      - json: JSON files with structured data
      - web_content: Web pages and documentation
 
  # Writing News Article Guidelines (Nutshell)
  news_article_guidelines:
    type: string
    content: |
      Purpose: Quick checklist for concise, factual news pieces.

      1) Headline: Specific, active, accurate; no clickbait.
      2) Lede: Deliver the 5W+H in 1–2 sentences; what happened and why it matters.
      3) Nut graf: One short paragraph that frames context and significance.
      4) Structure: Inverted pyramid—most important to least; keep paragraphs 1–3 sentences.
      5) Sourcing: Attribute clearly; include at least two independent sources when possible.
      6) Quotes: Short, distinctive quotes that add voice or authority, not repetition.
      7) Facts & Numbers: Verify every claim; include precise figures, time, location.
      8) Balance & Fairness: Represent key sides; note uncertainties/limitations.
      9) Clarity & Brevity: Plain language; remove jargon; prefer active voice.
      10) Style: Follow AP-style basics (titles, numbers, dates); consistent tense.
      11) Context: Provide brief background, prior events, or relevant data links.
      12) Visuals/Links: Add supporting charts, images, or official docs when available.
      13) Ethics: Avoid speculation; disclose conflicts; respect privacy and legal constraints.
      14) SEO/Metadata: Concise slug, descriptive meta; include key terms naturally.
      15) Final check: Read aloud; fact-check names, figures, quotes; ensure headline matches body.

      Output format (short template):
      - Headline:
      - Lede (1–2 sentences):
      - Nut graf (1 paragraph):
      - Key facts (bullets):
      - Source list:
      - Context/links:

  # Crew Composer knowledge
  crew_design_checklist:
    type: string
    content: |
      Crew Design Checklist

      1) Purpose & Scope: Define clear objectives and expected business outcomes.
      2) Primary Tasks: Break down into small, single-responsibility tasks.
      3) Agents: Roles, goals, backstories, tools, LLMs, iteration limits, delegation.
      4) Process: sequential vs hierarchical; manager agent/LLM when hierarchical.
      5) Context Graph: Task dependencies via `context` with minimal coupling.
      6) Knowledge: Identify string, files, CSV/PDF/JSON, or web sources, and how each is used.
      7) Tools: Prefer existing entries in `config/tools.yaml`; document any required API keys.
      8) Outputs: Define `output_file` paths and formats; ensure directories exist.
      9) Human-in-the-loop: Mark tasks that need `human_input: true`.
      10) Observability: Enable provider and endpoints; instrument CrewAI/OpenAI as needed.
      11) Scheduling: Specify triggers, inputs, and guardrails.
      12) Validation: Pass schema checks; ensure names and references align.
      13) Runbook: Provide merge steps, commands, and acceptance criteria.

  yaml_style_guide:
    type: string
    content: |
      YAML Style Guide for Crew Composer

      - Names: use `snake_case` for agent and task keys; keep them valid Python identifiers.
      - Clarity over brevity: prefer explicit fields and comments over cleverness.
      - Consistency: align with repository patterns in `config/*.yaml`.
      - Small tasks: keep tasks single-responsibility with clear `expected_output`.
      - Comments: explain "why", not the obvious "what".
      - Tooling: attach tools at the agent level; leverage wildcards (e.g., "brave.*") when appropriate.
      - DRY: reuse tools and knowledge sources; avoid near-duplicate tasks.

  observability_best_practices:
    type: string
    content: |
      Observability Best Practices (Crew Composer Template)

      - Provider: use `phoenix` for local dev or `otlp` for standard collectors.
      - Endpoint: default `http://127.0.0.1:4318`; override via `.env`.
      - Instrumentation: enable `instrument_crewai`; enable `instrument_openai` when needed.
      - Launch UI: optional, Phoenix only; may be disabled in CI.
      - Env vars: manage via the UI Observability tab or `.env` helper block.
      - Privacy: redact sensitive inputs/outputs in spans when required.

  crewai_reference_web:
    type: web_content
    urls:
      - "https://docs.crewai.com/concepts/crew"
      - "https://docs.crewai.com/concepts/agents"
      - "https://docs.crewai.com/concepts/tasks"
      - "https://docs.crewai.com/concepts/tools"
      - "https://docs.crewai.com/concepts/knowledge"
    selector: "main"
    max_depth: 1
